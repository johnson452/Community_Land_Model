Search.setIndex({
  docnames: [
    "Community_Land_Model",
    "Community_Land_Model.SRC",
    "DIAGNOSTICS",
    "EXAMPLES",
    "SRC",
    "SRC.METHODS",
    "SRC.TABLES",
    "TESTS",
    "index",
    "modules",
    "noxfile",
  ],
  filenames: [
    "Community_Land_Model.rst",
    "Community_Land_Model.SRC.rst",
    "DIAGNOSTICS.rst",
    "EXAMPLES.rst",
    "SRC.rst",
    "SRC.METHODS.rst",
    "SRC.TABLES.rst",
    "TESTS.rst",
    "index.rst",
    "modules.rst",
    "noxfile.rst",
  ],
  titles: [
    "Community_Land_Model package",
    "Community_Land_Model.SRC package",
    "DIAGNOSTICS package",
    "EXAMPLES package",
    "SRC package",
    "SRC.METHODS package",
    "SRC.TABLES package",
    "TESTS package",
    "Welcome to Community Land Model\u2019s documentation!",
    "Community_Land_Model",
    "noxfile module",
  ],
  terms: {
    src: [0, 7, 8, 9],
    initi: [0, 9],
    model_absorbed_emitted_radi: [0, 9],
    model_albedo: [0, 7, 9],
    model_evapor: [0, 9],
    model_sensible_heat_flux: [0, 9],
    run_routin: [0, 9],
    routin: [2, 4],
    analys: 2,
    output: [2, 3, 4],
    data: 2,
    requir: [2, 3, 4, 5, 7],
    link: [2, 3, 4, 5, 7],
    defint: [2, 4, 5, 7],
    sourc: [2, 3, 4, 5, 6, 7],
    plot_gener: [2, 9],
    x: 2,
    y: 2,
    str_val_x: 2,
    str_val_i: 2,
    main: [3, 4, 9],
    project: 3,
    loop: [3, 4],
    input: [3, 4],
    none: [3, 4],
    definit: 3,
    initialize_data: [3, 4, 9],
    run_clm: [3, 4, 9],
    class: [3, 4, 6],
    clm_paramet: [3, 9],
    base: [3, 4, 6],
    object: [3, 4, 6],
    structur: 4,
    paramet: 4,
    app: 4,
    state: 4,
    grid: 4,
    clm_app: [4, 9],
    load: [4, 9],
    try: 4,
    self: 4,
    name: [4, 6],
    txt: 4,
    save: [4, 9],
    clm_grid: [4, 9],
    time: [4, 5, 9],
    i: 4,
    clm_state: [4, 9],
    evapor: [4, 9],
    nt: 4,
    input_data: [4, 9],
    radiat: [4, 9],
    sensible_heat: [4, 9],
    run_absorbed_emitted_radiation_model: [4, 9],
    albedo: [4, 7],
    model: 4,
    tabl: 4,
    method: [4, 7],
    subdirectori: 4,
    canopi: [4, 9],
    canopy_model: [4, 9],
    j: 4,
    lambda_v: [4, 9],
    d: 4,
    optical_param: [4, 9],
    run_albedo_model: [4, 9],
    solar: [4, 9],
    solar_zenith_angl: [4, 9],
    mo_length: [4, 9],
    u_av: [4, 9],
    air_r: [4, 9],
    canopy_specific_humid: [4, 9],
    friction_veloc: [4, 9],
    psi: [4, 9],
    l: 4,
    1: 4,
    ksi: 4,
    2: [4, 6],
    humidity_ratio: [4, 9],
    latent_heat_water_vapor_flux: [4, 9],
    q_sat: [4, 9],
    r_b: [4, 9],
    ra: [4, 9],
    ra_prim: [4, 9],
    run_evaporation_model: [4, 9],
    temperature_ratio: [4, 9],
    vegetation_water_vapor_flux: [4, 9],
    water_vapor_flux: [4, 9],
    sensibl: 4,
    heat: 4,
    flux: 4,
    canopy_air_temperatur: [4, 9],
    run_sensible_heat_flux_model: [4, 9],
    sensible_heat_flux_tot: [4, 9],
    sensible_heat_flux_v: [4, 9],
    run: 4,
    call: 4,
    file: 4,
    file_sav: 4,
    run_xx: 4,
    integrat: 5,
    rk4: 5,
    t0: 5,
    tmax: 5,
    y0: 5,
    n: 5,
    n_eq: 5,
    f: 5,
    euler: 5,
    part: 6,
    7: 6,
    physic: 6,
    constant: 6,
    ar: 6,
    all: 6,
    lowercas: 6,
    physical_const: 6,
    plant: 6,
    optic: 6,
    properti: 6,
    plant_prop: 6,
    plant_functional_typ: 6,
    verifi: 7,
    py: 7,
    integration_schem: 7,
    time_integr: 7,
    test_integration_schem: [7, 9],
    community_land_model: 8,
    diagnost: [8, 9],
    packag: [8, 9],
    exampl: [8, 9],
    test: [8, 9],
    noxfil: [8, 9],
    modul: [8, 9],
    index: 8,
    search: 8,
    page: 8,
    submodul: 9,
    content: 9,
    input_script: 9,
    test_albedo: 9,
    test_time_integr: 9,
  },
  objects: {
    "": [
      [2, 0, 0, "-", "DIAGNOSTICS"],
      [3, 0, 0, "-", "EXAMPLES"],
      [4, 0, 0, "-", "SRC"],
      [7, 0, 0, "-", "TESTS"],
    ],
    DIAGNOSTICS: [[2, 0, 0, "-", "diagnostics"]],
    "DIAGNOSTICS.diagnostics": [
      [2, 1, 1, "", "diagnostics"],
      [2, 1, 1, "", "plot_general"],
    ],
    EXAMPLES: [[3, 0, 0, "-", "input_script"]],
    "EXAMPLES.input_script": [
      [3, 2, 1, "", "clm_parameters"],
      [3, 1, 1, "", "main"],
    ],
    SRC: [
      [5, 0, 0, "-", "METHODS"],
      [6, 0, 0, "-", "TABLES"],
      [4, 0, 0, "-", "initialization"],
      [4, 0, 0, "-", "model_absorbed_emitted_radiation"],
      [4, 0, 0, "-", "model_albedo"],
      [4, 0, 0, "-", "model_evaporation"],
      [4, 0, 0, "-", "model_sensible_heat_flux"],
      [4, 0, 0, "-", "run_routine"],
    ],
    "SRC.METHODS": [[5, 0, 0, "-", "time_integration"]],
    "SRC.METHODS.time_integration": [
      [5, 1, 1, "", "RK4"],
      [5, 1, 1, "", "euler"],
    ],
    "SRC.TABLES": [
      [6, 0, 0, "-", "table_2_7_physical_constants"],
      [6, 0, 0, "-", "table_3_1_plant_optics"],
    ],
    "SRC.TABLES.table_2_7_physical_constants": [
      [6, 2, 1, "", "physical_constants"],
    ],
    "SRC.TABLES.table_3_1_plant_optics": [[6, 1, 1, "", "plant_props"]],
    "SRC.initialization": [
      [4, 2, 1, "", "clm_app"],
      [4, 2, 1, "", "clm_grid"],
      [4, 2, 1, "", "clm_state"],
      [4, 2, 1, "", "evaporation"],
      [4, 1, 1, "", "initialize_data"],
      [4, 2, 1, "", "input_data"],
      [4, 2, 1, "", "radiation"],
      [4, 2, 1, "", "sensible_heat"],
    ],
    "SRC.initialization.clm_app": [
      [4, 3, 1, "", "load"],
      [4, 3, 1, "", "save"],
    ],
    "SRC.initialization.clm_grid": [
      [4, 3, 1, "", "load"],
      [4, 3, 1, "", "save"],
      [4, 3, 1, "", "time"],
    ],
    "SRC.initialization.clm_state": [
      [4, 3, 1, "", "load"],
      [4, 3, 1, "", "save"],
    ],
    "SRC.model_absorbed_emitted_radiation": [
      [4, 1, 1, "", "run_absorbed_emitted_radiation_model"],
    ],
    "SRC.model_albedo": [
      [4, 1, 1, "", "canopy"],
      [4, 1, 1, "", "canopy_model"],
      [4, 1, 1, "", "lambda_val"],
      [4, 1, 1, "", "optical_params"],
      [4, 1, 1, "", "run_albedo_model"],
      [4, 1, 1, "", "solar"],
      [4, 1, 1, "", "solar_zenith_angle"],
    ],
    "SRC.model_evaporation": [
      [4, 1, 1, "", "MO_length"],
      [4, 1, 1, "", "U_av"],
      [4, 1, 1, "", "air_res"],
      [4, 1, 1, "", "canopy_specific_humidity"],
      [4, 1, 1, "", "friction_velocity"],
      [4, 1, 1, "", "humidity_ratio"],
      [4, 1, 1, "", "latent_heat_water_vapor_flux"],
      [4, 1, 1, "", "psi"],
      [4, 1, 1, "", "q_sat"],
      [4, 1, 1, "", "r_b"],
      [4, 1, 1, "", "ra"],
      [4, 1, 1, "", "ra_prime"],
      [4, 1, 1, "", "run_evaporation_model"],
      [4, 1, 1, "", "temperature_ratio"],
      [4, 1, 1, "", "vegetation_water_vapor_flux"],
      [4, 1, 1, "", "water_vapor_flux"],
    ],
    "SRC.model_sensible_heat_flux": [
      [4, 1, 1, "", "canopy_air_temperature"],
      [4, 1, 1, "", "run_sensible_heat_flux_model"],
      [4, 1, 1, "", "sensible_heat_flux_tot"],
      [4, 1, 1, "", "sensible_heat_flux_v"],
    ],
    "SRC.run_routine": [[4, 1, 1, "", "run_clm"]],
    TESTS: [
      [7, 0, 0, "-", "test_albedo"],
      [7, 0, 0, "-", "test_time_integration"],
    ],
    "TESTS.test_albedo": [[7, 1, 1, "", "test_albedo"]],
    "TESTS.test_time_integration": [[7, 1, 1, "", "test_integration_schemes"]],
  },
  objtypes: { 0: "py:module", 1: "py:function", 2: "py:class", 3: "py:method" },
  objnames: {
    0: ["py", "module", "Python module"],
    1: ["py", "function", "Python function"],
    2: ["py", "class", "Python class"],
    3: ["py", "method", "Python method"],
  },
  titleterms: {
    community_land_model: [0, 1, 9],
    packag: [0, 1, 2, 3, 4, 5, 6, 7],
    subpackag: 0,
    submodul: [0, 1, 2, 3, 4, 5, 6, 7],
    noxfil: [0, 10],
    modul: [0, 1, 2, 3, 4, 5, 6, 7, 10],
    content: [0, 1, 2, 3, 4, 5, 6, 7, 8],
    src: [1, 4, 5, 6],
    initi: [1, 4],
    model_absorbed_emitted_radi: [1, 4],
    model_albedo: [1, 4],
    model_evapor: [1, 4],
    model_sensible_heat_flux: [1, 4],
    run_routin: [1, 4],
    diagnost: 2,
    exampl: 3,
    input_script: 3,
    method: 5,
    time_integr: 5,
    tabl: [6, 8],
    table_2_7_physical_const: 6,
    table_3_1_plant_opt: 6,
    test: 7,
    test_albedo: 7,
    test_time_integr: 7,
    welcom: 8,
    commun: 8,
    land: 8,
    model: 8,
    "": 8,
    document: 8,
    indic: 8,
  },
  envversion: {
    "sphinx.domains.c": 2,
    "sphinx.domains.changeset": 1,
    "sphinx.domains.citation": 1,
    "sphinx.domains.cpp": 8,
    "sphinx.domains.index": 1,
    "sphinx.domains.javascript": 2,
    "sphinx.domains.math": 2,
    "sphinx.domains.python": 3,
    "sphinx.domains.rst": 2,
    "sphinx.domains.std": 2,
    "sphinx.ext.todo": 2,
    "sphinx.ext.viewcode": 1,
    sphinx: 57,
  },
  alltitles: {
    "Welcome to Community Land Model\u2019s documentation!": [
      [8, "welcome-to-community-land-model-s-documentation"],
    ],
    "Contents:": [[8, null]],
    "Indices and tables": [[8, "indices-and-tables"]],
    Community_Land_Model: [[9, "community-land-model"]],
    "Community_Land_Model package": [[0, "community-land-model-package"]],
    Subpackages: [[0, "subpackages"]],
    Submodules: [
      [0, "submodules"],
      [1, "submodules"],
      [2, "submodules"],
      [3, "submodules"],
      [4, "submodules"],
      [5, "submodules"],
      [6, "submodules"],
      [7, "submodules"],
    ],
    "Community_Land_Model.noxfile module": [
      [0, "community-land-model-noxfile-module"],
    ],
    "Module contents": [
      [0, "module-contents"],
      [1, "module-contents"],
      [2, "module-DIAGNOSTICS"],
      [3, "module-EXAMPLES"],
      [4, "module-SRC"],
      [5, "module-SRC.METHODS"],
      [6, "module-SRC.TABLES"],
      [7, "module-TESTS"],
    ],
    "Community_Land_Model.SRC package": [
      [1, "community-land-model-src-package"],
    ],
    "Community_Land_Model.SRC.initialization module": [
      [1, "community-land-model-src-initialization-module"],
    ],
    "Community_Land_Model.SRC.model_absorbed_emitted_radiation module": [
      [1, "community-land-model-src-model-absorbed-emitted-radiation-module"],
    ],
    "Community_Land_Model.SRC.model_albedo module": [
      [1, "community-land-model-src-model-albedo-module"],
    ],
    "Community_Land_Model.SRC.model_evaporation module": [
      [1, "community-land-model-src-model-evaporation-module"],
    ],
    "Community_Land_Model.SRC.model_sensible_heat_flux module": [
      [1, "community-land-model-src-model-sensible-heat-flux-module"],
    ],
    "Community_Land_Model.SRC.run_routine module": [
      [1, "community-land-model-src-run-routine-module"],
    ],
    "DIAGNOSTICS package": [[2, "diagnostics-package"]],
    "DIAGNOSTICS.diagnostics module": [[2, "module-DIAGNOSTICS.diagnostics"]],
    "EXAMPLES package": [[3, "examples-package"]],
    "EXAMPLES.input_script module": [[3, "module-EXAMPLES.input_script"]],
    "SRC package": [[4, "src-package"]],
    "SRC.initialization module": [[4, "module-SRC.initialization"]],
    "SRC.model_absorbed_emitted_radiation module": [
      [4, "module-SRC.model_absorbed_emitted_radiation"],
    ],
    "SRC.model_albedo module": [[4, "module-SRC.model_albedo"]],
    "SRC.model_evaporation module": [[4, "module-SRC.model_evaporation"]],
    "SRC.model_sensible_heat_flux module": [
      [4, "module-SRC.model_sensible_heat_flux"],
    ],
    "SRC.run_routine module": [[4, "module-SRC.run_routine"]],
    "SRC.METHODS package": [[5, "src-methods-package"]],
    "SRC.METHODS.time_integration module": [
      [5, "module-SRC.METHODS.time_integration"],
    ],
    "SRC.TABLES package": [[6, "src-tables-package"]],
    "SRC.TABLES.table_2_7_physical_constants module": [
      [6, "module-SRC.TABLES.table_2_7_physical_constants"],
    ],
    "SRC.TABLES.table_3_1_plant_optics module": [
      [6, "module-SRC.TABLES.table_3_1_plant_optics"],
    ],
    "TESTS package": [[7, "tests-package"]],
    "TESTS.test_albedo module": [[7, "module-TESTS.test_albedo"]],
    "TESTS.test_time_integration module": [
      [7, "module-TESTS.test_time_integration"],
    ],
    "noxfile module": [[10, "noxfile-module"]],
  },
  indexentries: {
    diagnostics: [[2, "module-DIAGNOSTICS"]],
    "diagnostics.diagnostics": [[2, "module-DIAGNOSTICS.diagnostics"]],
    "diagnostics() (in module diagnostics.diagnostics)": [
      [2, "DIAGNOSTICS.diagnostics.diagnostics"],
    ],
    module: [
      [2, "module-DIAGNOSTICS"],
      [2, "module-DIAGNOSTICS.diagnostics"],
      [3, "module-EXAMPLES"],
      [3, "module-EXAMPLES.input_script"],
      [4, "module-SRC"],
      [4, "module-SRC.initialization"],
      [4, "module-SRC.model_absorbed_emitted_radiation"],
      [4, "module-SRC.model_albedo"],
      [4, "module-SRC.model_evaporation"],
      [4, "module-SRC.model_sensible_heat_flux"],
      [4, "module-SRC.run_routine"],
      [5, "module-SRC.METHODS"],
      [5, "module-SRC.METHODS.time_integration"],
      [6, "module-SRC.TABLES"],
      [6, "module-SRC.TABLES.table_2_7_physical_constants"],
      [6, "module-SRC.TABLES.table_3_1_plant_optics"],
      [7, "module-TESTS"],
      [7, "module-TESTS.test_albedo"],
      [7, "module-TESTS.test_time_integration"],
    ],
    "plot_general() (in module diagnostics.diagnostics)": [
      [2, "DIAGNOSTICS.diagnostics.plot_general"],
    ],
    examples: [[3, "module-EXAMPLES"]],
    "examples.input_script": [[3, "module-EXAMPLES.input_script"]],
    "clm_parameters (class in examples.input_script)": [
      [3, "EXAMPLES.input_script.clm_parameters"],
    ],
    "main() (in module examples.input_script)": [
      [3, "EXAMPLES.input_script.main"],
    ],
    "mo_length() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.MO_length"],
    ],
    src: [[4, "module-SRC"]],
    "src.initialization": [[4, "module-SRC.initialization"]],
    "src.model_absorbed_emitted_radiation": [
      [4, "module-SRC.model_absorbed_emitted_radiation"],
    ],
    "src.model_albedo": [[4, "module-SRC.model_albedo"]],
    "src.model_evaporation": [[4, "module-SRC.model_evaporation"]],
    "src.model_sensible_heat_flux": [
      [4, "module-SRC.model_sensible_heat_flux"],
    ],
    "src.run_routine": [[4, "module-SRC.run_routine"]],
    "u_av() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.U_av"],
    ],
    "air_res() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.air_res"],
    ],
    "canopy() (in module src.model_albedo)": [[4, "SRC.model_albedo.canopy"]],
    "canopy_air_temperature() (in module src.model_sensible_heat_flux)": [
      [4, "SRC.model_sensible_heat_flux.canopy_air_temperature"],
    ],
    "canopy_model() (in module src.model_albedo)": [
      [4, "SRC.model_albedo.canopy_model"],
    ],
    "canopy_specific_humidity() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.canopy_specific_humidity"],
    ],
    "clm_app (class in src.initialization)": [
      [4, "SRC.initialization.clm_app"],
    ],
    "clm_grid (class in src.initialization)": [
      [4, "SRC.initialization.clm_grid"],
    ],
    "clm_state (class in src.initialization)": [
      [4, "SRC.initialization.clm_state"],
    ],
    "evaporation (class in src.initialization)": [
      [4, "SRC.initialization.evaporation"],
    ],
    "friction_velocity() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.friction_velocity"],
    ],
    "humidity_ratio() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.humidity_ratio"],
    ],
    "initialize_data() (in module src.initialization)": [
      [4, "SRC.initialization.initialize_data"],
    ],
    "input_data (class in src.initialization)": [
      [4, "SRC.initialization.input_data"],
    ],
    "lambda_val() (in module src.model_albedo)": [
      [4, "SRC.model_albedo.lambda_val"],
    ],
    "latent_heat_water_vapor_flux() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.latent_heat_water_vapor_flux"],
    ],
    "load() (src.initialization.clm_app method)": [
      [4, "SRC.initialization.clm_app.load"],
    ],
    "load() (src.initialization.clm_grid method)": [
      [4, "SRC.initialization.clm_grid.load"],
    ],
    "load() (src.initialization.clm_state method)": [
      [4, "SRC.initialization.clm_state.load"],
    ],
    "optical_params() (in module src.model_albedo)": [
      [4, "SRC.model_albedo.optical_params"],
    ],
    "psi() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.psi"],
    ],
    "q_sat() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.q_sat"],
    ],
    "r_b() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.r_b"],
    ],
    "ra() (in module src.model_evaporation)": [[4, "SRC.model_evaporation.ra"]],
    "ra_prime() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.ra_prime"],
    ],
    "radiation (class in src.initialization)": [
      [4, "SRC.initialization.radiation"],
    ],
    "run_absorbed_emitted_radiation_model() (in module src.model_absorbed_emitted_radiation)":
      [
        [
          4,
          "SRC.model_absorbed_emitted_radiation.run_absorbed_emitted_radiation_model",
        ],
      ],
    "run_albedo_model() (in module src.model_albedo)": [
      [4, "SRC.model_albedo.run_albedo_model"],
    ],
    "run_clm() (in module src.run_routine)": [[4, "SRC.run_routine.run_clm"]],
    "run_evaporation_model() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.run_evaporation_model"],
    ],
    "run_sensible_heat_flux_model() (in module src.model_sensible_heat_flux)": [
      [4, "SRC.model_sensible_heat_flux.run_sensible_heat_flux_model"],
    ],
    "save() (src.initialization.clm_app method)": [
      [4, "SRC.initialization.clm_app.save"],
    ],
    "save() (src.initialization.clm_grid method)": [
      [4, "SRC.initialization.clm_grid.save"],
    ],
    "save() (src.initialization.clm_state method)": [
      [4, "SRC.initialization.clm_state.save"],
    ],
    "sensible_heat (class in src.initialization)": [
      [4, "SRC.initialization.sensible_heat"],
    ],
    "sensible_heat_flux_tot() (in module src.model_sensible_heat_flux)": [
      [4, "SRC.model_sensible_heat_flux.sensible_heat_flux_tot"],
    ],
    "sensible_heat_flux_v() (in module src.model_sensible_heat_flux)": [
      [4, "SRC.model_sensible_heat_flux.sensible_heat_flux_v"],
    ],
    "solar() (in module src.model_albedo)": [[4, "SRC.model_albedo.solar"]],
    "solar_zenith_angle() (in module src.model_albedo)": [
      [4, "SRC.model_albedo.solar_zenith_angle"],
    ],
    "temperature_ratio() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.temperature_ratio"],
    ],
    "time() (src.initialization.clm_grid method)": [
      [4, "SRC.initialization.clm_grid.time"],
    ],
    "vegetation_water_vapor_flux() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.vegetation_water_vapor_flux"],
    ],
    "water_vapor_flux() (in module src.model_evaporation)": [
      [4, "SRC.model_evaporation.water_vapor_flux"],
    ],
    "rk4() (in module src.methods.time_integration)": [
      [5, "SRC.METHODS.time_integration.RK4"],
    ],
    "src.methods": [[5, "module-SRC.METHODS"]],
    "src.methods.time_integration": [
      [5, "module-SRC.METHODS.time_integration"],
    ],
    "euler() (in module src.methods.time_integration)": [
      [5, "SRC.METHODS.time_integration.euler"],
    ],
    "src.tables": [[6, "module-SRC.TABLES"]],
    "src.tables.table_2_7_physical_constants": [
      [6, "module-SRC.TABLES.table_2_7_physical_constants"],
    ],
    "src.tables.table_3_1_plant_optics": [
      [6, "module-SRC.TABLES.table_3_1_plant_optics"],
    ],
    "physical_constants (class in src.tables.table_2_7_physical_constants)": [
      [6, "SRC.TABLES.table_2_7_physical_constants.physical_constants"],
    ],
    "plant_props() (in module src.tables.table_3_1_plant_optics)": [
      [6, "SRC.TABLES.table_3_1_plant_optics.plant_props"],
    ],
    tests: [[7, "module-TESTS"]],
    "tests.test_albedo": [[7, "module-TESTS.test_albedo"]],
    "tests.test_time_integration": [[7, "module-TESTS.test_time_integration"]],
    "test_albedo() (in module tests.test_albedo)": [
      [7, "TESTS.test_albedo.test_albedo"],
    ],
    "test_integration_schemes() (in module tests.test_time_integration)": [
      [7, "TESTS.test_time_integration.test_integration_schemes"],
    ],
  },
});
